<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>初见</title>
  
  <subtitle>Jeamotu</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://Jeamotu.cn/"/>
  <updated>2019-03-27T13:20:35.627Z</updated>
  <id>https://Jeamotu.cn/</id>
  
  <author>
    <name>初见</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Flutter控件之Text</title>
    <link href="https://Jeamotu.cn/2019/03/23/Flutter%E6%8E%A7%E4%BB%B6%E4%B9%8BText/"/>
    <id>https://Jeamotu.cn/2019/03/23/Flutter控件之Text/</id>
    <published>2019-03-23T08:54:33.000Z</published>
    <updated>2019-03-27T13:20:35.627Z</updated>
    
    <content type="html"><![CDATA[<p><strong>Text</strong> 控件是 <strong>Flutter</strong> 中最基本的一个控件，用来显示一个文本。<br><a id="more"></a></p><h1 id="创建方法"><a href="#创建方法" class="headerlink" title="创建方法"></a>创建方法</h1><p><strong>Text</strong> 控件继承至 <strong>StatelessWidget</strong>，创建方法有两种</p><table><thead><tr><th style="text-align:left">创建方法</th><th style="text-align:left">介绍</th></tr></thead><tbody><tr><td style="text-align:left">new Text()</td><td style="text-align:left">构造方法创建，只能生成一种style</td></tr><tr><td style="text-align:left">Text.rich()</td><td style="text-align:left">静态方法创建，能够生成多种style</td></tr></tbody></table><h2 id="构造方法简介"><a href="#构造方法简介" class="headerlink" title="构造方法简介"></a>构造方法简介</h2><p><code>Text(String data, {Key key, TextStyle style, StrutStyle strutStyle, TextAlign textAlign, TextDirection textDirection, Locale locale, bool softWrap, TextOverflow overflow, double textScaleFactor, int maxLines, String semanticsLabel}) → Text</code></p><blockquote><p>{}花括号内的参数为可选</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">const</span> <span class="title">Text</span><span class="params">(<span class="keyword">this</span>.data, &#123;</span></span></span><br><span class="line"><span class="function"><span class="params">    Key key,</span></span></span><br><span class="line"><span class="function"><span class="params">    <span class="keyword">this</span>.style,</span></span></span><br><span class="line"><span class="function"><span class="params">    <span class="keyword">this</span>.strutStyle,</span></span></span><br><span class="line"><span class="function"><span class="params">    <span class="keyword">this</span>.textAlign,</span></span></span><br><span class="line"><span class="function"><span class="params">    <span class="keyword">this</span>.textDirection,</span></span></span><br><span class="line"><span class="function"><span class="params">    <span class="keyword">this</span>.locale,</span></span></span><br><span class="line"><span class="function"><span class="params">    <span class="keyword">this</span>.softWrap,</span></span></span><br><span class="line"><span class="function"><span class="params">    <span class="keyword">this</span>.overflow,</span></span></span><br><span class="line"><span class="function"><span class="params">    <span class="keyword">this</span>.textScaleFactor,</span></span></span><br><span class="line"><span class="function"><span class="params">    <span class="keyword">this</span>.maxLines,</span></span></span><br><span class="line"><span class="function"><span class="params">    <span class="keyword">this</span>.semanticsLabel,</span></span></span><br><span class="line"><span class="function"><span class="params">  &#125;)</span> : <span class="title">assert</span><span class="params">(data != <span class="keyword">null</span>)</span>,</span></span><br><span class="line"><span class="function">       textSpan </span>= <span class="keyword">null</span>,</span><br><span class="line">       <span class="keyword">super</span>(key: key);</span><br></pre></td></tr></table></figure><h3 id="第一个必选参数-String-data"><a href="#第一个必选参数-String-data" class="headerlink" title="第一个必选参数 String data"></a>第一个必选参数 <font color="red">String data</font></h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/// The text to display.</span></span><br><span class="line"><span class="comment">///</span></span><br><span class="line"><span class="comment">/// This will be null if a [textSpan] is provided instead.</span></span><br><span class="line"><span class="keyword">final</span> String data;</span><br></pre></td></tr></table></figure><p>从源码注释中可以了解到，<strong>data</strong> 为要显示的文本，类型为 <strong>String</strong>。<br><code>Text(&#39;Hello World&#39;)</code><br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Flutter/TextWigdet/text.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure></p><h3 id="第一个可选参数-Key-key"><a href="#第一个可选参数-Key-key" class="headerlink" title="第一个可选参数 Key key"></a>第一个可选参数 <font color="green">Key key</font></h3><p><strong>key</strong> 这个参数目前不确定有什么用，可以不管，待以后研究明白再写一篇说明吧。<br>官方解释：<a href="https://flutterchina.club/widgets-intro/#key" target="_blank" rel="noopener">https://flutterchina.club/widgets-intro/#key</a></p><h3 id="第二个可选参数-TextStyle-style"><a href="#第二个可选参数-TextStyle-style" class="headerlink" title="第二个可选参数 TextStyle style"></a>第二个可选参数 <font color="green">TextStyle style</font></h3><p><strong>style</strong> 确定了文本显示的样式风格。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">const</span> <span class="title">TextStyle</span><span class="params">(&#123;</span></span></span><br><span class="line"><span class="function"><span class="params">  <span class="keyword">this</span>.inherit = <span class="keyword">true</span>,</span></span></span><br><span class="line"><span class="function"><span class="params">  <span class="keyword">this</span>.color,</span></span></span><br><span class="line"><span class="function"><span class="params">  <span class="keyword">this</span>.fontSize,</span></span></span><br><span class="line"><span class="function"><span class="params">  <span class="keyword">this</span>.fontWeight,</span></span></span><br><span class="line"><span class="function"><span class="params">  <span class="keyword">this</span>.fontStyle,</span></span></span><br><span class="line"><span class="function"><span class="params">  <span class="keyword">this</span>.letterSpacing,</span></span></span><br><span class="line"><span class="function"><span class="params">  <span class="keyword">this</span>.wordSpacing,</span></span></span><br><span class="line"><span class="function"><span class="params">  <span class="keyword">this</span>.textBaseline,</span></span></span><br><span class="line"><span class="function"><span class="params">  <span class="keyword">this</span>.height,</span></span></span><br><span class="line"><span class="function"><span class="params">  <span class="keyword">this</span>.locale,</span></span></span><br><span class="line"><span class="function"><span class="params">  <span class="keyword">this</span>.foreground,</span></span></span><br><span class="line"><span class="function"><span class="params">  <span class="keyword">this</span>.background,</span></span></span><br><span class="line"><span class="function"><span class="params">  <span class="keyword">this</span>.shadows,</span></span></span><br><span class="line"><span class="function"><span class="params">  <span class="keyword">this</span>.decoration,</span></span></span><br><span class="line"><span class="function"><span class="params">  <span class="keyword">this</span>.decorationColor,</span></span></span><br><span class="line"><span class="function"><span class="params">  <span class="keyword">this</span>.decorationStyle,</span></span></span><br><span class="line"><span class="function"><span class="params">  <span class="keyword">this</span>.debugLabel,</span></span></span><br><span class="line"><span class="function"><span class="params">  String fontFamily,</span></span></span><br><span class="line"><span class="function"><span class="params">  List&lt;String&gt; fontFamilyFallback,</span></span></span><br><span class="line"><span class="function"><span class="params">  String <span class="keyword">package</span>,</span></span></span><br><span class="line"><span class="function"><span class="params">&#125;)</span> : fontFamily </span>= <span class="keyword">package</span> == <span class="keyword">null</span> ? fontFamily : <span class="string">'packages/$package/$fontFamily'</span>,</span><br><span class="line">     _fontFamilyFallback = fontFamilyFallback,</span><br><span class="line">     _package = <span class="keyword">package</span>,</span><br><span class="line">     <span class="keyword">assert</span>(inherit != <span class="keyword">null</span>),</span><br><span class="line">     <span class="keyword">assert</span>(color == <span class="keyword">null</span> || foreground == <span class="keyword">null</span>, _kColorForegroundWarning);</span><br></pre></td></tr></table></figure></p><p><code>TextStyle({bool inherit: true, Color color, double fontSize, FontWeight fontWeight, FontStyle fontStyle, double letterSpacing, double wordSpacing, TextBaseline textBaseline, double height, Locale locale, Paint foreground, Paint background, List&lt;Shadow&gt; shadows, TextDecoration decoration, Color decorationColor, TextDecorationStyle decorationStyle, String debugLabel, String fontFamily, List&lt;String&gt; fontFamilyFallback, String package}) → TextStyle</code><br>从 <strong>TextStyle</strong> 的构造方法可以看到，所有参数都是可选的。</p><h4 id="TextStyle的第一个可选参数-bool-inherit"><a href="#TextStyle的第一个可选参数-bool-inherit" class="headerlink" title="TextStyle的第一个可选参数 bool inherit"></a>TextStyle的第一个可选参数 <font color="green">bool inherit</font></h4><p>该参数默认值为 <strong>true</strong>，为 <strong>true</strong> 时，此 <strong>style</strong> 会与最接近的系统的 <strong>DefaultTextStyle</strong> 合并。</p><h4 id="TextStyle的第二个可选参数-Color-color"><a href="#TextStyle的第二个可选参数-Color-color" class="headerlink" title="TextStyle的第二个可选参数 Color color"></a>TextStyle的第二个可选参数 <font color="green">Color color</font></h4><p>该 <strong>Text</strong> 控件中文本 <strong>显示的颜色</strong>。</p><blockquote><p>如果指定了 <strong>foreground</strong> 属性，则该参数必须为空。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Text(<span class="string">'Hello World'</span>, style: <span class="keyword">new</span> TextStyle(color: Colors.deepOrange))),</span><br><span class="line">Text(<span class="string">'Hello World'</span>, style: <span class="keyword">new</span> TextStyle(color: Colors.blue))),</span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Flutter/TextWigdet/textstyle_color.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h4 id="TextStyle的第三个可选参数-double-fontSize"><a href="#TextStyle的第三个可选参数-double-fontSize" class="headerlink" title="TextStyle的第三个可选参数 double fontSize"></a>TextStyle的第三个可选参数 <font color="green">double fontSize</font></h4><p>该 <strong>Text</strong> 控件中文本 <strong>显示的文字大小</strong>，类型为 <strong>双精度</strong>，默认值为 <strong>14.0</strong>。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Text(<span class="string">'Hello World!'</span>,</span><br><span class="line">      style: <span class="keyword">new</span> TextStyle(color: Colors.deepOrange, fontSize: <span class="number">18.0</span>));</span><br><span class="line">Text(<span class="string">'Hello Flutter!'</span>,</span><br><span class="line">      style: <span class="keyword">new</span> TextStyle(color: Colors.blue, fontSize: <span class="number">20.0</span>));</span><br></pre></td></tr></table></figure></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Flutter/TextWigdet/textstyle_fontsize.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h4 id="TextStyle的第四个可选参数-FontWeight-fontWeight"><a href="#TextStyle的第四个可选参数-FontWeight-fontWeight" class="headerlink" title="TextStyle的第四个可选参数 FontWeight fontWeight"></a>TextStyle的第四个可选参数 <font color="green">FontWeight fontWeight</font></h4><p>该 <strong>Text</strong> 控件中文本 <strong>显示的字体粗细程度</strong>。<br>该参数有11种类型可选。</p><table><thead><tr><th style="text-align:left">类型</th><th style="text-align:left">含义</th></tr></thead><tbody><tr><td style="text-align:left">FontWeight.bold</td><td style="text-align:left">常用的粗体，值为w700</td></tr><tr><td style="text-align:left">FontWeight.normal</td><td style="text-align:left">默认字体粗细，值为w400</td></tr><tr><td style="text-align:left">FontWeight.w100</td><td style="text-align:left">最细</td></tr><tr><td style="text-align:left">FontWeight.w200</td><td style="text-align:left">特细</td></tr><tr><td style="text-align:left">FontWeight.w300</td><td style="text-align:left">细</td></tr><tr><td style="text-align:left">FontWeight.w400</td><td style="text-align:left">正常，普通</td></tr><tr><td style="text-align:left">FontWeight.w500</td><td style="text-align:left">较粗</td></tr><tr><td style="text-align:left">FontWeight.w600</td><td style="text-align:left">半粗体</td></tr><tr><td style="text-align:left">FontWeight.w700</td><td style="text-align:left">加粗</td></tr><tr><td style="text-align:left">FontWeight.w800</td><td style="text-align:left">特粗</td></tr><tr><td style="text-align:left">FontWeight.w900</td><td style="text-align:left">最粗</td></tr></tbody></table><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Flutter/TextWigdet/textstyle_fontweight.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h4 id="TextStyle的第五个可选参数-FontStyle-fontStyle"><a href="#TextStyle的第五个可选参数-FontStyle-fontStyle" class="headerlink" title="TextStyle的第五个可选参数 FontStyle fontStyle"></a>TextStyle的第五个可选参数 <font color="green">FontStyle fontStyle</font></h4><p>该 <strong>Text</strong> 控件中文本的字体显示类型。<br>该参数有两种类型</p><table><thead><tr><th style="text-align:left">类型</th><th style="text-align:left">含义</th></tr></thead><tbody><tr><td style="text-align:left">FontStyle.normal</td><td style="text-align:left">直体</td></tr><tr><td style="text-align:left">FontStyle.italic</td><td style="text-align:left">斜体</td></tr></tbody></table><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Flutter/TextWigdet/text_fontstyle.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h4 id="TextStyle的第六个可选参数-double-letterSpacing"><a href="#TextStyle的第六个可选参数-double-letterSpacing" class="headerlink" title="TextStyle的第六个可选参数 double letterSpacing"></a>TextStyle的第六个可选参数 <font color="green">double letterSpacing</font></h4><p>该 <strong>Text</strong> 控件中文本的 <strong>字母</strong> 之间的 <strong>间隔空间</strong>，类型为 <strong>双精度</strong>。<br><strong>负数</strong> 可以让字母更加接近。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Text(<span class="string">'Hello world!'</span>, style: <span class="keyword">new</span> TextStyle(color: Colors.greenAccent,</span><br><span class="line">    fontSize: <span class="number">20.0</span>, letterSpacing: -<span class="number">5.0</span>)));</span><br><span class="line">Text(<span class="string">'Hello world!'</span>, style: <span class="keyword">new</span> TextStyle( color: Colors.pinkAccent,</span><br><span class="line">    fontSize: <span class="number">20.0</span>, letterSpacing: <span class="number">0</span>)));</span><br><span class="line">Text(<span class="string">'Hello world!'</span>, style: <span class="keyword">new</span> TextStyle( color: Colors.blue,</span><br><span class="line">    fontSize: <span class="number">20.0</span>, letterSpacing: <span class="number">5</span>)));</span><br></pre></td></tr></table></figure></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Flutter/TextWigdet/textstyle_letterSpacing.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h4 id="TextStyle的第七个可选参数-double-wordSpacing"><a href="#TextStyle的第七个可选参数-double-wordSpacing" class="headerlink" title="TextStyle的第七个可选参数 double wordSpacing"></a>TextStyle的第七个可选参数 <font color="green">double wordSpacing</font></h4><p>该 <strong>Text</strong> 控件中文本的 <strong>单词</strong> 之间的 <strong>间隔空间</strong>，类型为 <strong>双精度</strong>。<br><strong>负数</strong> 可以让单词更加接近。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Text(<span class="string">'Hello world!'</span>, style: <span class="keyword">new</span> TextStyle(color: Colors.greenAccent,</span><br><span class="line">    fontSize: <span class="number">20.0</span>, wordSpacing: -<span class="number">10.0</span>)));</span><br><span class="line">Text(<span class="string">'Hello world!'</span>, style: <span class="keyword">new</span> TextStyle( color: Colors.pinkAccent,</span><br><span class="line">    fontSize: <span class="number">20.0</span>, wordSpacing: <span class="number">0</span>)));</span><br><span class="line">Text(<span class="string">'Hello world!'</span>, style: <span class="keyword">new</span> TextStyle( color: Colors.blue,</span><br><span class="line">    fontSize: <span class="number">20.0</span>, wordSpacing: <span class="number">10</span>)));</span><br></pre></td></tr></table></figure></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Flutter/TextWigdet/textstyle_wordSpacing.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h4 id="TextStyle的第八个可选参数-TextBaseline-textBaseline"><a href="#TextStyle的第八个可选参数-TextBaseline-textBaseline" class="headerlink" title="TextStyle的第八个可选参数 TextBaseline textBaseline"></a>TextStyle的第八个可选参数 <font color="green">TextBaseline textBaseline</font></h4><p>该 <strong>Text</strong> 控件中文本的对齐基准线。<br>该参数有两种类型</p><table><thead><tr><th style="text-align:left">类型</th><th style="text-align:left">含义</th></tr></thead><tbody><tr><td style="text-align:left">TextBaseline.alphabetic</td><td style="text-align:left"><font color="red">//TODO 目前不清楚含义</font></td></tr><tr><td style="text-align:left">TextBaseline.ideographic</td><td style="text-align:left"><font color="red">//TODO 目前不清楚含义</font></td></tr></tbody></table><h4 id="TextStyle的第九个可选参数-double-height"><a href="#TextStyle的第九个可选参数-double-height" class="headerlink" title="TextStyle的第九个可选参数 double height"></a>TextStyle的第九个可选参数 <font color="green">double height</font></h4><p>该 <strong>Text</strong> 控件中文本的 <strong>行与行显示的距离</strong>，值为 <strong>1~2</strong>。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Text(<span class="string">'Hello Flutter!\nHello Flutter!'</span>, style: <span class="keyword">new</span> TextStyle(color: Colors.greenAccent,</span><br><span class="line">    fontSize: <span class="number">20.0</span>, height: <span class="number">1</span>)));</span><br><span class="line">Text(<span class="string">'Hello Flutter!\nHello Flutter!'</span>, style: <span class="keyword">new</span> TextStyle( color: Colors.pinkAccent,</span><br><span class="line">    fontSize: <span class="number">20.0</span>, height: <span class="number">1.5</span>)));</span><br><span class="line">Text(<span class="string">'Hello Flutter!\nHello Flutter!'</span>, style: <span class="keyword">new</span> TextStyle( color: Colors.blue,</span><br><span class="line">    fontSize: <span class="number">20.0</span>, height: <span class="number">2</span>)));</span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Flutter/TextWigdet/textstyle_height.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h4 id="TextStyle的第十个可选参数-Locale-locale"><a href="#TextStyle的第十个可选参数-Locale-locale" class="headerlink" title="TextStyle的第十个可选参数 Locale locale"></a>TextStyle的第十个可选参数 <font color="green">Locale locale</font></h4><p>用于选择 <strong>区域特定字形</strong> 的区域设置。此参数很少设置，目前不清楚有什么影响。</p><h4 id="TextStyle的第十一个可选参数-Paint-foreground"><a href="#TextStyle的第十一个可选参数-Paint-foreground" class="headerlink" title="TextStyle的第十一个可选参数 Paint foreground"></a>TextStyle的第十一个可选参数 <font color="green">Paint foreground</font></h4><p>该 <strong>Text</strong> 控件中文本的 <strong>前景色</strong>，即文本显示的颜色。</p><blockquote><p>不能和color参数同时设置，否则编译不会出错，运行时Crash。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Text(<span class="string">'Hello Flutter!'</span>, style: <span class="keyword">new</span> TextStyle(</span><br><span class="line">    color: Colors.greenAccent, fontSize: <span class="number">20.0</span>)));</span><br><span class="line"></span><br><span class="line">Paint foreColor = <span class="keyword">new</span> Paint();</span><br><span class="line">foreColor.color = Colors.pinkAccent;</span><br><span class="line">Text(<span class="string">'Hello Flutter!'</span>, style: <span class="keyword">new</span> TextStyle(</span><br><span class="line">    fontSize: <span class="number">20.0</span>, foreground: foreColor)));</span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Flutter/TextWigdet/textstyle_foreground.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h4 id="TextStyle的第十二个可选参数-Paint-background"><a href="#TextStyle的第十二个可选参数-Paint-background" class="headerlink" title="TextStyle的第十二个可选参数 Paint background"></a>TextStyle的第十二个可选参数 <font color="green">Paint background</font></h4><p>该 <strong>Text</strong> 控件的 <strong>背景</strong> 颜色。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Paint backBlackColor = <span class="keyword">new</span> Paint();</span><br><span class="line">backBlackColor.color = Colors.black;</span><br><span class="line">Paint backYellowColor = <span class="keyword">new</span> Paint();</span><br><span class="line">backYellowColor.color = Colors.yellowAccent;</span><br><span class="line"></span><br><span class="line">Text(<span class="string">'Hello Flutter!'</span>, style: <span class="keyword">new</span> TextStyle(color: Colors.greenAccent,</span><br><span class="line">    fontSize: <span class="number">20.0</span>, background: backBlackColor))),</span><br><span class="line">Text(<span class="string">'Hello Flutter!'</span>, style: <span class="keyword">new</span> TextStyle(color: Colors.pinkAccent,</span><br><span class="line">    fontSize: <span class="number">20.0</span>, background: backYellowColor))),</span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Flutter/TextWigdet/textstyle_background.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h4 id="TextStyle的第十三个可选参数-List-lt-ui-Shadow-gt-shadows"><a href="#TextStyle的第十三个可选参数-List-lt-ui-Shadow-gt-shadows" class="headerlink" title="TextStyle的第十三个可选参数 List&lt;ui.Shadow&gt; shadows"></a>TextStyle的第十三个可选参数 <font color="green">List&lt;ui.Shadow&gt; shadows</font></h4><p>该 <strong>Text</strong> 控件中文本的 <strong>文字阴影效果</strong>，类型为 <strong>Shadow集合</strong>，最终效果为集合中的 <strong>所有Shadow组合效果</strong>。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">Text(<span class="string">'Hello Flutter!'</span>,</span><br><span class="line">    style: <span class="keyword">new</span> TextStyle(</span><br><span class="line">        color: Colors.greenAccent,  <span class="comment">//字体颜色 绿色</span></span><br><span class="line">        fontSize: <span class="number">30.0</span>,  <span class="comment">//字体大小 30</span></span><br><span class="line">        shadows: [</span><br><span class="line">        <span class="keyword">new</span> Shadow(</span><br><span class="line">              color: Colors.purpleAccent,  <span class="comment">//阴影颜色 紫色</span></span><br><span class="line">              offset: <span class="keyword">new</span> Offset(-<span class="number">5</span>, -<span class="number">5</span>),  <span class="comment">//偏移量 (5,10)</span></span><br><span class="line">              blurRadius: <span class="number">1.0</span>),  <span class="comment">//模糊度 1</span></span><br><span class="line">        <span class="keyword">new</span> Shadow(</span><br><span class="line">              color: Colors.black,  <span class="comment">//阴影颜色 黑色</span></span><br><span class="line">              offset: <span class="keyword">new</span> Offset(<span class="number">5</span>, <span class="number">5</span>),  <span class="comment">//偏移量 (5,5)</span></span><br><span class="line">              blurRadius: <span class="number">3.0</span>),  <span class="comment">//模糊度 3</span></span><br><span class="line">])));</span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Flutter/TextWigdet/textstyle_shadow.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h4 id="TextStyle的第十四个可选参数-TextDecoration-decoration"><a href="#TextStyle的第十四个可选参数-TextDecoration-decoration" class="headerlink" title="TextStyle的第十四个可选参数 TextDecoration decoration"></a>TextStyle的第十四个可选参数 <font color="green">TextDecoration decoration</font></h4><p>该 <strong>Text</strong> 控件中文本的 <strong>文字装饰</strong> 效果，该参数有四个类型，可以和<font color="red">decorationColor</font>参数一起使用</p><table><thead><tr><th style="text-align:left">类型</th><th style="text-align:left">含义</th></tr></thead><tbody><tr><td style="text-align:left">TextDecoration.none</td><td style="text-align:left">无装饰</td></tr><tr><td style="text-align:left">TextDecoration.lineThrough</td><td style="text-align:left">删除线</td></tr><tr><td style="text-align:left">TextDecoration.overline</td><td style="text-align:left">上划线</td></tr><tr><td style="text-align:left">TextDecoration.underline</td><td style="text-align:left">下划线</td></tr></tbody></table><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">Text(<span class="string">'Hello Flutter!'</span>,</span><br><span class="line">    style: <span class="keyword">new</span> TextStyle(</span><br><span class="line">        color: Colors.deepOrange, <span class="comment">//文本颜色 橘色</span></span><br><span class="line">        fontSize: <span class="number">20.0</span>,</span><br><span class="line">        decoration: TextDecoration.lineThrough, <span class="comment">//删除线</span></span><br><span class="line">        decorationColor: Colors.yellowAccent))), <span class="comment">//装饰颜色 黄色</span></span><br><span class="line">Text(<span class="string">'Hello Flutter!'</span>,</span><br><span class="line">    style: <span class="keyword">new</span> TextStyle(</span><br><span class="line">        color: Colors.deepOrange,  <span class="comment">//文本颜色 橘色</span></span><br><span class="line">        fontSize: <span class="number">20.0</span>,</span><br><span class="line">        decoration: TextDecoration.overline,  <span class="comment">//上划线</span></span><br><span class="line">        decorationColor: Colors.black))),  <span class="comment">//装饰颜色 黑色</span></span><br><span class="line">Text(<span class="string">'Hello Flutter!'</span>,</span><br><span class="line">    style: <span class="keyword">new</span> TextStyle(</span><br><span class="line">        color: Colors.deepOrange,  <span class="comment">//文本颜色 橘色</span></span><br><span class="line">        fontSize: <span class="number">20.0</span>,</span><br><span class="line">        decoration: TextDecoration.underline,  <span class="comment">//下划线</span></span><br><span class="line">        decorationColor: Colors.cyanAccent))),  <span class="comment">//装饰颜色 青色</span></span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Flutter/TextWigdet/textstyle_decoration.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h4 id="TextStyle的第十五个可选参数-Color-decorationColor"><a href="#TextStyle的第十五个可选参数-Color-decorationColor" class="headerlink" title="TextStyle的第十五个可选参数 Color decorationColor"></a>TextStyle的第十五个可选参数 <font color="green">Color decorationColor</font></h4><p>该 <strong>Text</strong> 控件中文本的文字装饰效果的 <strong>颜色</strong>，默认和文本颜色一致。</p><h4 id="TextStyle的第十六个可选参数-TextDecorationStyle-decorationStyle"><a href="#TextStyle的第十六个可选参数-TextDecorationStyle-decorationStyle" class="headerlink" title="TextStyle的第十六个可选参数 TextDecorationStyle decorationStyle"></a>TextStyle的第十六个可选参数 <font color="green">TextDecorationStyle decorationStyle</font></h4><p>该 <strong>Text</strong> 控件中文本的文字装饰效果的 <strong>样式风格</strong>，该参数有五个类型。</p><table><thead><tr><th style="text-align:left">类型</th><th style="text-align:left">含义</th></tr></thead><tbody><tr><td style="text-align:left">TextDecorationStyle.dashed</td><td style="text-align:left">横线式虚线</td></tr><tr><td style="text-align:left">TextDecorationStyle.dotted</td><td style="text-align:left">点式虚线</td></tr><tr><td style="text-align:left">TextDecorationStyle.double</td><td style="text-align:left">两条线</td></tr><tr><td style="text-align:left">TextDecorationStyle.solid</td><td style="text-align:left">实线(默认值)</td></tr><tr><td style="text-align:left">TextDecorationStyle.wavy</td><td style="text-align:left">波浪线</td></tr></tbody></table><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Text(<span class="string">'Hello Flutter!'</span>,</span><br><span class="line">        style: <span class="keyword">new</span> TextStyle(</span><br><span class="line">                color: Colors.deepOrange, <span class="comment">//文本颜色 橘色</span></span><br><span class="line">                fontSize: <span class="number">20.0</span>,</span><br><span class="line">                decoration: TextDecoration.lineThrough,</span><br><span class="line">                decorationColor: Colors.black,</span><br><span class="line">                <span class="comment">// decorationStyle: TextDecorationStyle.dashed)));  //横线式虚线</span></span><br><span class="line">                <span class="comment">// decorationStyle: TextDecorationStyle.dotted)));  //点式虚线</span></span><br><span class="line">                <span class="comment">// decorationStyle: TextDecorationStyle.double)));  //两条线</span></span><br><span class="line">                <span class="comment">// decorationStyle: TextDecorationStyle.solid)));  //实线</span></span><br><span class="line">                decorationStyle: TextDecorationStyle.wavy)));  <span class="comment">//波浪线</span></span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Flutter/TextWigdet/textstyle_decorationStyle.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h4 id="TextStyle的第十七个可选参数-String-debugLabel"><a href="#TextStyle的第十七个可选参数-String-debugLabel" class="headerlink" title="TextStyle的第十七个可选参数 String debugLabel"></a>TextStyle的第十七个可选参数 <font color="green">String debugLabel</font></h4><p>用于描述该TextStyle，方便用户调试，仅在Debug模式编译时有效，并且在用 <strong>“==”</strong> 比较两个TextStyle时，该参数不会影响结果。</p><h4 id="TextStyle的第十八个可选参数-String-fontFamily"><a href="#TextStyle的第十八个可选参数-String-fontFamily" class="headerlink" title="TextStyle的第十八个可选参数 String fontFamily"></a>TextStyle的第十八个可选参数 <font color="green">String fontFamily</font></h4><p>该 <strong>Text</strong> 控件中文本的文字 <strong>字体</strong>，参数类型为 <strong>String</strong>。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Text(<span class="string">'Hello Flutter!'</span>, style: <span class="keyword">new</span> TextStyle(color: Colors.deepOrange,</span><br><span class="line">                  fontSize: <span class="number">20.0</span>, fontFamily: <span class="string">"Times New Roman"</span>)));</span><br><span class="line">Text(<span class="string">'Hello Flutter!'</span>, style: <span class="keyword">new</span> TextStyle(color: Colors.deepOrange,</span><br><span class="line">                    fontSize: <span class="number">20.0</span>, fontFamily: <span class="string">"monospace"</span>)));</span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Flutter/TextWigdet/textstyle_fontFamily.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h4 id="TextStyle的第十九个可选参数-List-lt-String-fontFamilyFallback"><a href="#TextStyle的第十九个可选参数-List-lt-String-fontFamilyFallback" class="headerlink" title="TextStyle的第十九个可选参数 List&lt;String> fontFamilyFallback"></a>TextStyle的第十九个可选参数 <font color="green">List&lt;String> fontFamilyFallback</font></h4><p>//TODO</p><h4 id="TextStyle的第二十个可选参数-String-package"><a href="#TextStyle的第二十个可选参数-String-package" class="headerlink" title="TextStyle的第二十个可选参数 String package"></a>TextStyle的第二十个可选参数 <font color="green">String package</font></h4><p>//TODO</p><h3 id="第三个可选参数-StrutStyle-strutStyle"><a href="#第三个可选参数-StrutStyle-strutStyle" class="headerlink" title="第三个可选参数 StrutStyle strutStyle"></a>第三个可选参数 <font color="green">StrutStyle strutStyle</font></h3><p>//TODO</p><h3 id="第四个可选参数-TextAlign-textAlign"><a href="#第四个可选参数-TextAlign-textAlign" class="headerlink" title="第四个可选参数 TextAlign textAlign"></a>第四个可选参数 <font color="green">TextAlign textAlign</font></h3>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;Text&lt;/strong&gt; 控件是 &lt;strong&gt;Flutter&lt;/strong&gt; 中最基本的一个控件，用来显示一个文本。&lt;br&gt;
    
    </summary>
    
    
      <category term="Flutter" scheme="https://Jeamotu.cn/tags/Flutter/"/>
    
  </entry>
  
  <entry>
    <title>Fuchsia相关</title>
    <link href="https://Jeamotu.cn/2018/09/09/Fuchsia%E7%9B%B8%E5%85%B3/"/>
    <id>https://Jeamotu.cn/2018/09/09/Fuchsia相关/</id>
    <published>2018-09-09T09:08:32.000Z</published>
    <updated>2019-03-24T08:23:38.609Z</updated>
    
    <content type="html"><![CDATA[<p>Pink + Purple == Fuchsia (a new Operating System)<br><a id="more"></a><br>Google的一个新的操作系统，内容持续更新中。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Pink + Purple == Fuchsia (a new Operating System)&lt;br&gt;
    
    </summary>
    
    
      <category term="Fuchsia" scheme="https://Jeamotu.cn/tags/Fuchsia/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu下ShadowSocks搭建服务端篇</title>
    <link href="https://Jeamotu.cn/2018/09/09/Ubuntu%E4%B8%8BShadowSocks%E6%90%AD%E5%BB%BA%E6%9C%8D%E5%8A%A1%E7%AB%AF%E7%AF%87/"/>
    <id>https://Jeamotu.cn/2018/09/09/Ubuntu下ShadowSocks搭建服务端篇/</id>
    <published>2018-09-09T09:04:21.000Z</published>
    <updated>2019-03-23T06:18:06.602Z</updated>
    
    <content type="html"><![CDATA[<p><br>本篇文章主要介绍Ubuntu下面如何搭建ShadowSocks[R]服务端。<br><br><a id="more"></a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;br&gt;本篇文章主要介绍Ubuntu下面如何搭建ShadowSocks[R]服务端。&lt;br&gt;&lt;br&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="https://Jeamotu.cn/tags/Linux/"/>
    
      <category term="SS" scheme="https://Jeamotu.cn/tags/SS/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu下ShadowSocks搭建客户端篇</title>
    <link href="https://Jeamotu.cn/2016/12/04/Ubuntu%E4%B8%8BShadowSocks%E6%90%AD%E5%BB%BA%E5%AE%A2%E6%88%B7%E7%AB%AF%E7%AF%87/"/>
    <id>https://Jeamotu.cn/2016/12/04/Ubuntu下ShadowSocks搭建客户端篇/</id>
    <published>2016-12-04T15:59:00.000Z</published>
    <updated>2019-03-23T06:17:59.241Z</updated>
    
    <content type="html"><![CDATA[<p>本篇文章主要介绍Ubuntu下面如何使用ShadowSocks来进行科学上网。<br><a id="more"></a><br>作为一个程序员，<strong>翻墙</strong>可谓是手到擒来，自己租个服务器，当然也有免费的服务器可以用，可能网速稍差。然后再搭个PPTP或者SS，接着就可以看看外面的世界了，刷刷Twitter、FB，看看Youtube，当然更重要的是获取外面的源码。</p><p>Windows下的翻墙就不必赘述了，各种VPN软件很放方便。但是Linux下如果不会的话还要折腾一番。今天就来教大家<strong>Ubuntu</strong>下怎么使用<strong>SS</strong>翻墙，主要是因为我用的是SS没有用VPN，所以VPN的使用就由大家自己去研究了。</p><h4 id="安装SS"><a href="#安装SS" class="headerlink" title="安装SS"></a>安装SS</h4><ol><li>首先需要保证你的网络是畅通的，然后更新软件源，用下面的命令<br><code>sudo apt-get update</code></li><li>然后安装<strong>python-pip</strong><br><code>sudo apt-get install python-pip</code></li><li>安装SS<br><code>sudo pip install shadowsocks</code></li><li><p>配置SS<br><code>sudo vim /etc/shadowsocks.json</code><br>输入以下代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"> &#123;</span><br><span class="line">    &quot;server&quot;: &quot;你的服务器ip&quot;,</span><br><span class="line">    &quot;server_port&quot;: 你的服务器端口,</span><br><span class="line">    &quot;local_address&quot;: &quot;127.0.0.1&quot;,</span><br><span class="line">    &quot;local_port&quot;: 1080,</span><br><span class="line">    &quot;password&quot;: &quot;你的SS密码&quot;,</span><br><span class="line">    &quot;method&quot;: &quot;aes-256-cfb&quot;,</span><br><span class="line">    &quot;fast_open&quot;: true,</span><br><span class="line">    &quot;timeout&quot;:300</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>启动SS<br><code>sudo sslocal -c /etc/shadowsocks.json</code></p></li></ol><blockquote><p>上述命令执行后，此终端是不能关闭的，否则SS会被关闭，所以第6步的操作就是实现开机自启，这样SS就会在后台运行了，不会影响我们做其他事情。如果不想重启后再安装privoxy，那就执行<code>CTRL+ALT+T</code>开一个新的终端继续下面的操作，同时这个运行SS的终端可以看到网络连接的输出信息。</p></blockquote><ol start="6"><li>开机自动启动SS<br>将上面的代码加入到<code>/etc/rc.local</code>文件中的<code>exit 0</code>这句代码之前。</li></ol><p>以上就是SS的搭建了，这个时候我们发现上网时并不可以翻墙，原因是需要将sock5代理映射为http代理。代理的软件很多，我选择了推荐度比较高的privoxy，下面是privoxy的配置。</p><h4 id="安装privoxy"><a href="#安装privoxy" class="headerlink" title="安装privoxy"></a>安装privoxy</h4><ol><li>安装privoxy<br><code>sudo apt-get install privoxy</code></li><li>配置privoxy<br>打开<code>/etc/privoxy/config</code><br>找到其中的4.1节，看一下有没有一句<code>listen-address  localhost:8118</code>的代码，如果被注释了，取消注释。因为版本不一样这句的状态可能会不一样。<figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/SS/ss_4_1.png" alt="4.1节" title="">                </div>                <div class="image-caption">4.1节</div>            </figure>接着找到5.2节，在本节末尾加入下面代码<br><code>forward-socks5 / 127.0.0.1:1080 .</code><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/SS/ss_5_2.png" alt="5.2节" title="">                </div>                <div class="image-caption">5.2节</div>            </figure></li><li>重启privoxy服务<br><code>sudo /etc/init.d/privoxy restart</code></li><li>开机自启privoxy服务<br>将<code>sudo /etc/init.d/privoxy start</code>代码加入到<code>/etc/rc.local</code>文件中的<code>exit 0</code>这句代码之前。</li></ol><p>配置后的rc.local如下<br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/SS/ss_rc_local.png" alt="rc.local" title="">                </div>                <div class="image-caption">rc.local</div>            </figure></p><p>以上就是privoxy的配置了，接着需要配置终端和Firefox浏览器的代理。</p><h4 id="代理配置"><a href="#代理配置" class="headerlink" title="代理配置"></a>代理配置</h4><ol><li>终端代理<br>将以下代码追加到<code>/etc/profile</code>中或者<code>~/.bashrc</code>中<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">export http_proxy=&quot;127.0.0.1:8118&quot;</span><br><span class="line">export https_proxy=&quot;127.0.0.1:8118&quot;</span><br><span class="line">export ftp_proxy=&quot;127.0.0.1:8118&quot;</span><br></pre></td></tr></table></figure></li></ol><p>接着执行<code>source /etc/profile</code>或者<code>source ~/.bashrc</code>，这样就完成了终端翻墙的配置，执行<code>wget google.com</code>测试一下。<br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/SS/wget_google.png" alt="测试" title="">                </div>                <div class="image-caption">测试</div>            </figure></p><blockquote><p>此处连接失败可能有多种情况</p><ol><li>SS配置文件有误，请确认</li><li>SS未启动，请手动启动或者加到rc.local里开机自启后重启电脑</li><li>privoxy配置有误，请参照教程确认一下</li><li>privoxy端口冲突(猜测)，将privoxy配置章节中的8118端口改为其他端口号</li><li>privoxy未启动，请执行<code>sudo /etc/init.d/privoxy restart</code></li><li>环境变量设置有误，确认<code>/etc/profile</code>和<code>~/.bashrc</code>文件，当猜测为端口冲突的情况下，此处环境变量内的端口值也要改为第4种情况中修改后的端口，同时别忘了执行<code>source</code>命令</li></ol></blockquote><ol start="2"><li>Firefox浏览器的配置，打开<strong>设置</strong>-&gt;<strong>高级</strong>-&gt;<strong>网络</strong>-&gt;<strong>连接</strong>，配置如下<figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/SS/filefox_proxy.png" alt="Firefox配置" title="">                </div>                <div class="image-caption">Firefox配置</div>            </figure>注意需要将那个勾打上哦～<br>测试一下Twitter<figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/SS/tw.png" alt="Twitter喜欢的可以关注哦～" title="">                </div>                <div class="image-caption">Twitter喜欢的可以关注哦～</div>            </figure></li></ol><p>经过以上的配置以后，我们就可以愉快的看外面的世界了，至于可以访问的网页就需要看你的SS设置的规则了。可能是我之前用server版的Linux用多了，代理就想着往文件里面加 0.0。当我用Chrome的时候，提示我它的代理用的就是系统代理，我才想起来还有个系统代理。如果想全部使用代理的话，系统代理就这样配置。<strong>系统设置</strong>-&gt;<strong>网络</strong><br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/SS/ss_sys_proxy.png" alt="系统代理" title="">                </div>                <div class="image-caption">系统代理</div>            </figure><br>当不想使用全局代理的时候将<strong>Manual</strong>选为<strong>None</strong>就好了。</p><p>好了，以上就是Ubuntu下的SS配置了，感兴趣的朋友可以关注一下呦～</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本篇文章主要介绍Ubuntu下面如何使用ShadowSocks来进行科学上网。&lt;br&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="https://Jeamotu.cn/tags/Linux/"/>
    
      <category term="SS" scheme="https://Jeamotu.cn/tags/SS/"/>
    
  </entry>
  
</feed>
